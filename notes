1. show two random images //
2. make it so that when the user clicks one, two new ones appear //
3. keep track of the click count of each // increment on the specific image(store elsewhere in object)
4. (spillover time) work on design and css  //
5. (tomorrow) set up parse's rest api (using ajax) and make votes permanent
  //upload as an object format, not repetitive uploads.
  //put it all into object format, upload, then work on manipulating with get and post req from app.


BUGS:
if duplicates move to next



QUESTIONS:
//how to use http and ajax through console.
//how does curl compare to all these other protocol methods... how many are there? whath's the spectrum.

LEARNED:

Each object instantiated is a row, each column heading is a key, and each value is a cell populated in that row.
edits to the object are done within the object name space, then a function() fires to interact with the database.

//Class.Table.Column.Id.Value

- in object oriented relational data bases like parse. droping means erasing acolumn. Garbage collection happens when a variable can no longer be accessed in the code. (blog post);
- every object needs to be instantiated to be manipulated or saved somehow. this is the way the object.create function works in the objects. It needs to be made each time a data object is manipulated or added to a table.
algorithm is a control of information flow - so that it fits the user end result.
//DB - a table is setup through an object {key:value} but it actually means {column : value, nextcolumn:value}. This is helpful in keeping a clear schema.
//Doc.ready is very important and should be done.

objects can only redifine by adding itself  + a number.

when things keep bottoming out with getting started on incrementing of storing in a hash, use the '|| default' method. This creates a base to start building.

using hash objects, use bracket notation, as problems happen with dot.

//JQ is actually creating something that looks like what it is selecting...
//where it cannot select the

every element has the potential for many attrs' or attributes. Like src, class, id,
each attr has a val and an index, to navigate on the dom, and cut, select, and manipulate it's many parts.
on ready functions can be helpful to activate when dom is loaded.
use of a string and variables are key in dom selection and val, and attr.

//midleware - manipulates requests before sending them off to another layer of midleware,
//before hitting the endpoints of the server.

//passing functions and passing by reference is incredible for the following reasons:
  first: evaluate the functions output correctly, then pass that to the other function.
  second: if that means you pass undefined that happens too, or a function or values.
  third: if this happens multiple times you can ...
  //jquery can be made into variables for quick reference into the code as a var.
  //you can use methods that are part of jquery selectors for the dom.
  //you can use .classes and iterate through them with methods and then call on those.
  //remove .load to be  $('img', el).attr('src', generate()); changing the attributes.
    //that also uses a filter to find all the dom elements that are el, changes their attributes, using my own function called generate. src is the attribute changed.